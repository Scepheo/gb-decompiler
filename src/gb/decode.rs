use super::opcodes::CBOpCode;
use super::opcodes::OpCode;
use gb::*;
use std::convert;
use std::fmt;

#[derive(Debug, Copy, Clone)]
pub struct DecodeError {
    pub address: usize,
    pub opcode: u8,
}

impl fmt::Display for DecodeError {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        write!(
            f,
            "Unused opcode {0:02X} @ {1:04X}",
            self.opcode, self.address
        )
    }
}

impl convert::From<DecodeError> for String {
    fn from(error: DecodeError) -> String {
        format!(
            "Unused opcode {0:02X} @ {1:04X}",
            error.opcode, error.address
        )
    }
}

fn unused_opcode(address: usize, opcode: u8) -> Result<OpCode, DecodeError> {
    let error = DecodeError {
        address: address,
        opcode: opcode,
    };

    Err(error)
}

impl OpCode {
    pub fn decode_at(cartridge: &Cartridge, address: usize) -> Result<OpCode, DecodeError> {
        let opcode = cartridge[address];

        let instruction = match opcode {
            0x00 => OpCode::NOP,
            0x01 => OpCode::LD_BC_d16(d16::at(cartridge, address + 1)),
            0x02 => OpCode::LD_pBC_A,
            0x03 => OpCode::INC_BC,
            0x04 => OpCode::INC_B,
            0x05 => OpCode::DEC_B,
            0x06 => OpCode::LD_B_d8(d8::at(cartridge, address + 1)),
            0x07 => OpCode::RLCA,
            0x08 => OpCode::LD_pa16_SP(a16::at(cartridge, address + 1)),
            0x09 => OpCode::ADD_HL_BC,
            0x0A => OpCode::LD_A_pBC,
            0x0B => OpCode::DEC_BC,
            0x0C => OpCode::INC_C,
            0x0D => OpCode::DEC_C,
            0x0E => OpCode::LD_C_d8(d8::at(cartridge, address + 1)),
            0x0F => OpCode::RRCA,

            0x10 => OpCode::STOP_0,
            0x11 => OpCode::LD_DE_d16(d16::at(cartridge, address + 1)),
            0x12 => OpCode::LD_pDE_A,
            0x13 => OpCode::INC_DE,
            0x14 => OpCode::INC_D,
            0x15 => OpCode::DEC_D,
            0x16 => OpCode::LD_D_d8(d8::at(cartridge, address + 1)),
            0x17 => OpCode::RLA,
            0x18 => OpCode::JR_r8(r8::at(cartridge, address + 1)),
            0x19 => OpCode::ADD_HL_DE,
            0x1A => OpCode::LD_A_pDE,
            0x1B => OpCode::DEC_DE,
            0x1C => OpCode::INC_E,
            0x1D => OpCode::DEC_E,
            0x1E => OpCode::LD_E_d8(d8::at(cartridge, address + 1)),
            0x1F => OpCode::RRA,

            0x20 => OpCode::JR_NZ_r8(r8::at(cartridge, address + 1)),
            0x21 => OpCode::LD_HL_d16(d16::at(cartridge, address + 1)),
            0x22 => OpCode::LD_pHLp_A,
            0x23 => OpCode::INC_HL,
            0x24 => OpCode::INC_H,
            0x25 => OpCode::DEC_H,
            0x26 => OpCode::LD_H_d8(d8::at(cartridge, address + 1)),
            0x27 => OpCode::DAA,
            0x28 => OpCode::JR_Z_r8(r8::at(cartridge, address + 1)),
            0x29 => OpCode::ADD_HL_HL,
            0x2A => OpCode::LD_A_pHLp,
            0x2B => OpCode::DEC_HL,
            0x2C => OpCode::INC_L,
            0x2D => OpCode::DEC_L,
            0x2E => OpCode::LD_L_d8(d8::at(cartridge, address + 1)),
            0x2F => OpCode::CPL,

            0x30 => OpCode::JR_NC_r8(r8::at(cartridge, address + 1)),
            0x31 => OpCode::LD_SP_d16(d16::at(cartridge, address + 1)),
            0x32 => OpCode::LD_pHLm_A,
            0x33 => OpCode::INC_SP,
            0x34 => OpCode::INC_pHL,
            0x35 => OpCode::DEC_pHL,
            0x36 => OpCode::LD_pHL_d8(d8::at(cartridge, address + 1)),
            0x37 => OpCode::SCF,
            0x38 => OpCode::JR_C_r8(r8::at(cartridge, address + 1)),
            0x39 => OpCode::ADD_HL_SP,
            0x3A => OpCode::LD_A_pHLm,
            0x3B => OpCode::DEC_SP,
            0x3C => OpCode::INC_A,
            0x3D => OpCode::DEC_A,
            0x3E => OpCode::LD_A_d8(d8::at(cartridge, address + 1)),
            0x3F => OpCode::CCF,

            0x40 => OpCode::LD_B_B,
            0x41 => OpCode::LD_B_C,
            0x42 => OpCode::LD_B_D,
            0x43 => OpCode::LD_B_E,
            0x44 => OpCode::LD_B_H,
            0x45 => OpCode::LD_B_L,
            0x46 => OpCode::LD_B_pHL,
            0x47 => OpCode::LD_B_A,
            0x48 => OpCode::LD_C_B,
            0x49 => OpCode::LD_C_C,
            0x4A => OpCode::LD_C_D,
            0x4B => OpCode::LD_C_E,
            0x4C => OpCode::LD_C_H,
            0x4D => OpCode::LD_C_L,
            0x4E => OpCode::LD_C_pHL,
            0x4F => OpCode::LD_C_A,

            0x50 => OpCode::LD_D_B,
            0x51 => OpCode::LD_D_C,
            0x52 => OpCode::LD_D_D,
            0x53 => OpCode::LD_D_E,
            0x54 => OpCode::LD_D_H,
            0x55 => OpCode::LD_D_L,
            0x56 => OpCode::LD_D_pHL,
            0x57 => OpCode::LD_D_A,
            0x58 => OpCode::LD_E_B,
            0x59 => OpCode::LD_E_C,
            0x5A => OpCode::LD_E_D,
            0x5B => OpCode::LD_E_E,
            0x5C => OpCode::LD_E_H,
            0x5D => OpCode::LD_E_L,
            0x5E => OpCode::LD_E_pHL,
            0x5F => OpCode::LD_E_A,

            0x60 => OpCode::LD_H_B,
            0x61 => OpCode::LD_H_C,
            0x62 => OpCode::LD_H_D,
            0x63 => OpCode::LD_H_E,
            0x64 => OpCode::LD_H_H,
            0x65 => OpCode::LD_H_L,
            0x66 => OpCode::LD_H_pHL,
            0x67 => OpCode::LD_H_A,
            0x68 => OpCode::LD_L_B,
            0x69 => OpCode::LD_L_C,
            0x6A => OpCode::LD_L_D,
            0x6B => OpCode::LD_L_E,
            0x6C => OpCode::LD_L_H,
            0x6D => OpCode::LD_L_L,
            0x6E => OpCode::LD_L_pHL,
            0x6F => OpCode::LD_L_A,

            0x70 => OpCode::LD_pHL_B,
            0x71 => OpCode::LD_pHL_C,
            0x72 => OpCode::LD_pHL_D,
            0x73 => OpCode::LD_pHL_E,
            0x74 => OpCode::LD_pHL_H,
            0x75 => OpCode::LD_pHL_L,
            0x76 => OpCode::HALT,
            0x77 => OpCode::LD_pHL_A,
            0x78 => OpCode::LD_A_B,
            0x79 => OpCode::LD_A_C,
            0x7A => OpCode::LD_A_D,
            0x7B => OpCode::LD_A_E,
            0x7C => OpCode::LD_A_H,
            0x7D => OpCode::LD_A_L,
            0x7E => OpCode::LD_A_pHL,
            0x7F => OpCode::LD_A_A,

            0x80 => OpCode::ADD_A_B,
            0x81 => OpCode::ADD_A_C,
            0x82 => OpCode::ADD_A_D,
            0x83 => OpCode::ADD_A_E,
            0x84 => OpCode::ADD_A_H,
            0x85 => OpCode::ADD_A_L,
            0x86 => OpCode::ADD_A_pHL,
            0x87 => OpCode::ADD_A_A,
            0x88 => OpCode::ADC_A_B,
            0x89 => OpCode::ADC_A_C,
            0x8A => OpCode::ADC_A_D,
            0x8B => OpCode::ADC_A_E,
            0x8C => OpCode::ADC_A_H,
            0x8D => OpCode::ADC_A_L,
            0x8E => OpCode::ADC_A_pHL,
            0x8F => OpCode::ADC_A_A,

            0x90 => OpCode::SUB_B,
            0x91 => OpCode::SUB_C,
            0x92 => OpCode::SUB_D,
            0x93 => OpCode::SUB_E,
            0x94 => OpCode::SUB_H,
            0x95 => OpCode::SUB_L,
            0x96 => OpCode::SUB_pHL,
            0x97 => OpCode::SUB_A,
            0x98 => OpCode::SBC_A_B,
            0x99 => OpCode::SBC_A_C,
            0x9A => OpCode::SBC_A_D,
            0x9B => OpCode::SBC_A_E,
            0x9C => OpCode::SBC_A_H,
            0x9D => OpCode::SBC_A_L,
            0x9E => OpCode::SBC_A_pHL,
            0x9F => OpCode::SBC_A_A,

            0xA0 => OpCode::AND_B,
            0xA1 => OpCode::AND_C,
            0xA2 => OpCode::AND_D,
            0xA3 => OpCode::AND_E,
            0xA4 => OpCode::AND_H,
            0xA5 => OpCode::AND_L,
            0xA6 => OpCode::AND_pHL,
            0xA7 => OpCode::AND_A,
            0xA8 => OpCode::XOR_B,
            0xA9 => OpCode::XOR_C,
            0xAA => OpCode::XOR_D,
            0xAB => OpCode::XOR_E,
            0xAC => OpCode::XOR_H,
            0xAD => OpCode::XOR_L,
            0xAE => OpCode::XOR_pHL,
            0xAF => OpCode::XOR_A,

            0xB0 => OpCode::OR_B,
            0xB1 => OpCode::OR_C,
            0xB2 => OpCode::OR_D,
            0xB3 => OpCode::OR_E,
            0xB4 => OpCode::OR_H,
            0xB5 => OpCode::OR_L,
            0xB6 => OpCode::OR_pHL,
            0xB7 => OpCode::OR_A,
            0xB8 => OpCode::CP_B,
            0xB9 => OpCode::CP_C,
            0xBA => OpCode::CP_D,
            0xBB => OpCode::CP_E,
            0xBC => OpCode::CP_H,
            0xBD => OpCode::CP_L,
            0xBE => OpCode::CP_pHL,
            0xBF => OpCode::CP_A,

            0xC0 => OpCode::RET_NZ,
            0xC1 => OpCode::POP_BC,
            0xC2 => OpCode::JP_NZ_a16(a16::at(cartridge, address + 1)),
            0xC3 => OpCode::JP_a16(a16::at(cartridge, address + 1)),
            0xC4 => OpCode::CALL_NZ_a16(a16::at(cartridge, address + 1)),
            0xC5 => OpCode::PUSH_BC,
            0xC6 => OpCode::ADD_A_d8(d8::at(cartridge, address + 1)),
            0xC7 => OpCode::RST_00H,
            0xC8 => OpCode::RET_Z,
            0xC9 => OpCode::RET,
            0xCA => OpCode::JP_Z_a16(a16::at(cartridge, address + 1)),
            0xCB => OpCode::PREFIX_CB(decode_cb(cartridge, address + 1)),
            0xCC => OpCode::CALL_Z_a16(a16::at(cartridge, address + 1)),
            0xCD => OpCode::CALL_a16(a16::at(cartridge, address + 1)),
            0xCE => OpCode::ADC_A_d8(d8::at(cartridge, address + 1)),
            0xCF => OpCode::RST_08H,

            0xD0 => OpCode::RET_NC,
            0xD1 => OpCode::POP_DE,
            0xD2 => OpCode::JP_NC_a16(a16::at(cartridge, address + 1)),
            0xD3 => return unused_opcode(address, opcode),
            0xD4 => OpCode::CALL_NC_a16(a16::at(cartridge, address + 1)),
            0xD5 => OpCode::PUSH_DE,
            0xD6 => OpCode::SUB_d8(d8::at(cartridge, address + 1)),
            0xD7 => OpCode::RST_10H,
            0xD8 => OpCode::RET_C,
            0xD9 => OpCode::RETI,
            0xDA => OpCode::JP_C_a16(a16::at(cartridge, address + 1)),
            0xDB => return unused_opcode(address, opcode),
            0xDC => OpCode::CALL_C_a16(a16::at(cartridge, address + 1)),
            0xDD => return unused_opcode(address, opcode),
            0xDE => OpCode::SBC_A_d8(d8::at(cartridge, address + 1)),
            0xDF => OpCode::RST_18H,

            0xE0 => OpCode::LDH_pa8_A(a8::at(cartridge, address + 1)),
            0xE1 => OpCode::POP_HL,
            0xE2 => OpCode::LD_pC_A,
            0xE3 => return unused_opcode(address, opcode),
            0xE4 => return unused_opcode(address, opcode),
            0xE5 => OpCode::PUSH_HL,
            0xE6 => OpCode::AND_d8(d8::at(cartridge, address + 1)),
            0xE7 => OpCode::RST_20H,
            0xE8 => OpCode::ADD_SP_r8(r8::at(cartridge, address + 1)),
            0xE9 => OpCode::JP_pHL,
            0xEA => OpCode::LD_pa16_A(a16::at(cartridge, address + 1)),
            0xEB => return unused_opcode(address, opcode),
            0xEC => return unused_opcode(address, opcode),
            0xED => return unused_opcode(address, opcode),
            0xEE => OpCode::XOR_d8(d8::at(cartridge, address + 1)),
            0xEF => OpCode::RST_28H,

            0xF0 => OpCode::LDH_A_pa8(a8::at(cartridge, address + 1)),
            0xF1 => OpCode::POP_AF,
            0xF2 => OpCode::LD_A_pC,
            0xF3 => OpCode::DI,
            0xF4 => return unused_opcode(address, opcode),
            0xF5 => OpCode::PUSH_AF,
            0xF6 => OpCode::OR_d8(d8::at(cartridge, address + 1)),
            0xF7 => OpCode::RST_30H,
            0xF8 => OpCode::LD_HL_SPp_r8(r8::at(cartridge, address + 1)),
            0xF9 => OpCode::LD_SP_HL,
            0xFA => OpCode::LD_A_pa16(a16::at(cartridge, address + 1)),
            0xFB => OpCode::EI,
            0xFC => return unused_opcode(address, opcode),
            0xFD => return unused_opcode(address, opcode),
            0xFE => OpCode::CP_d8(d8::at(cartridge, address + 1)),
            0xFF => OpCode::RST_38H,
        };

        Ok(instruction)
    }
}

fn decode_cb(cartridge: &Cartridge, address: usize) -> CBOpCode {
    let op_code = cartridge[address];

    match op_code {
        0x00 => CBOpCode::RLC_B,
        0x01 => CBOpCode::RLC_C,
        0x02 => CBOpCode::RLC_D,
        0x03 => CBOpCode::RLC_E,
        0x04 => CBOpCode::RLC_H,
        0x05 => CBOpCode::RLC_L,
        0x06 => CBOpCode::RLC_pHL,
        0x07 => CBOpCode::RLC_A,
        0x08 => CBOpCode::RRC_B,
        0x09 => CBOpCode::RRC_C,
        0x0A => CBOpCode::RRC_D,
        0x0B => CBOpCode::RRC_E,
        0x0C => CBOpCode::RRC_H,
        0x0D => CBOpCode::RRC_L,
        0x0E => CBOpCode::RRC_pHL,
        0x0F => CBOpCode::RRC_A,

        0x10 => CBOpCode::RL_B,
        0x11 => CBOpCode::RL_C,
        0x12 => CBOpCode::RL_D,
        0x13 => CBOpCode::RL_E,
        0x14 => CBOpCode::RL_H,
        0x15 => CBOpCode::RL_L,
        0x16 => CBOpCode::RL_pHL,
        0x17 => CBOpCode::RL_A,
        0x18 => CBOpCode::RR_B,
        0x19 => CBOpCode::RR_C,
        0x1A => CBOpCode::RR_D,
        0x1B => CBOpCode::RR_E,
        0x1C => CBOpCode::RR_H,
        0x1D => CBOpCode::RR_L,
        0x1E => CBOpCode::RR_pHL,
        0x1F => CBOpCode::RR_A,

        0x20 => CBOpCode::SLA_B,
        0x21 => CBOpCode::SLA_C,
        0x22 => CBOpCode::SLA_D,
        0x23 => CBOpCode::SLA_E,
        0x24 => CBOpCode::SLA_H,
        0x25 => CBOpCode::SLA_L,
        0x26 => CBOpCode::SLA_pHL,
        0x27 => CBOpCode::SLA_A,
        0x28 => CBOpCode::SRA_B,
        0x29 => CBOpCode::SRA_C,
        0x2A => CBOpCode::SRA_D,
        0x2B => CBOpCode::SRA_E,
        0x2C => CBOpCode::SRA_H,
        0x2D => CBOpCode::SRA_L,
        0x2E => CBOpCode::SRA_pHL,
        0x2F => CBOpCode::SRA_A,

        0x30 => CBOpCode::SWAP_B,
        0x31 => CBOpCode::SWAP_C,
        0x32 => CBOpCode::SWAP_D,
        0x33 => CBOpCode::SWAP_E,
        0x34 => CBOpCode::SWAP_H,
        0x35 => CBOpCode::SWAP_L,
        0x36 => CBOpCode::SWAP_pHL,
        0x37 => CBOpCode::SWAP_A,
        0x38 => CBOpCode::SRL_B,
        0x39 => CBOpCode::SRL_C,
        0x3A => CBOpCode::SRL_D,
        0x3B => CBOpCode::SRL_E,
        0x3C => CBOpCode::SRL_H,
        0x3D => CBOpCode::SRL_L,
        0x3E => CBOpCode::SRL_pHL,
        0x3F => CBOpCode::SRL_A,

        0x40 => CBOpCode::BIT_0_B,
        0x41 => CBOpCode::BIT_0_C,
        0x42 => CBOpCode::BIT_0_D,
        0x43 => CBOpCode::BIT_0_E,
        0x44 => CBOpCode::BIT_0_H,
        0x45 => CBOpCode::BIT_0_L,
        0x46 => CBOpCode::BIT_0_pHL,
        0x47 => CBOpCode::BIT_0_A,
        0x48 => CBOpCode::BIT_1_B,
        0x49 => CBOpCode::BIT_1_C,
        0x4A => CBOpCode::BIT_1_D,
        0x4B => CBOpCode::BIT_1_E,
        0x4C => CBOpCode::BIT_1_H,
        0x4D => CBOpCode::BIT_1_L,
        0x4E => CBOpCode::BIT_1_pHL,
        0x4F => CBOpCode::BIT_1_A,

        0x50 => CBOpCode::BIT_2_B,
        0x51 => CBOpCode::BIT_2_C,
        0x52 => CBOpCode::BIT_2_D,
        0x53 => CBOpCode::BIT_2_E,
        0x54 => CBOpCode::BIT_2_H,
        0x55 => CBOpCode::BIT_2_L,
        0x56 => CBOpCode::BIT_2_pHL,
        0x57 => CBOpCode::BIT_2_A,
        0x58 => CBOpCode::BIT_3_B,
        0x59 => CBOpCode::BIT_3_C,
        0x5A => CBOpCode::BIT_3_D,
        0x5B => CBOpCode::BIT_3_E,
        0x5C => CBOpCode::BIT_3_H,
        0x5D => CBOpCode::BIT_3_L,
        0x5E => CBOpCode::BIT_3_pHL,
        0x5F => CBOpCode::BIT_3_A,

        0x60 => CBOpCode::BIT_4_B,
        0x61 => CBOpCode::BIT_4_C,
        0x62 => CBOpCode::BIT_4_D,
        0x63 => CBOpCode::BIT_4_E,
        0x64 => CBOpCode::BIT_4_H,
        0x65 => CBOpCode::BIT_4_L,
        0x66 => CBOpCode::BIT_4_pHL,
        0x67 => CBOpCode::BIT_4_A,
        0x68 => CBOpCode::BIT_5_B,
        0x69 => CBOpCode::BIT_5_C,
        0x6A => CBOpCode::BIT_5_D,
        0x6B => CBOpCode::BIT_5_E,
        0x6C => CBOpCode::BIT_5_H,
        0x6D => CBOpCode::BIT_5_L,
        0x6E => CBOpCode::BIT_5_pHL,
        0x6F => CBOpCode::BIT_5_A,

        0x70 => CBOpCode::BIT_6_B,
        0x71 => CBOpCode::BIT_6_C,
        0x72 => CBOpCode::BIT_6_D,
        0x73 => CBOpCode::BIT_6_E,
        0x74 => CBOpCode::BIT_6_H,
        0x75 => CBOpCode::BIT_6_L,
        0x76 => CBOpCode::BIT_6_pHL,
        0x77 => CBOpCode::BIT_6_A,
        0x78 => CBOpCode::BIT_7_B,
        0x79 => CBOpCode::BIT_7_C,
        0x7A => CBOpCode::BIT_7_D,
        0x7B => CBOpCode::BIT_7_E,
        0x7C => CBOpCode::BIT_7_H,
        0x7D => CBOpCode::BIT_7_L,
        0x7E => CBOpCode::BIT_7_pHL,
        0x7F => CBOpCode::BIT_7_A,

        0x80 => CBOpCode::RES_0_B,
        0x81 => CBOpCode::RES_0_C,
        0x82 => CBOpCode::RES_0_D,
        0x83 => CBOpCode::RES_0_E,
        0x84 => CBOpCode::RES_0_H,
        0x85 => CBOpCode::RES_0_L,
        0x86 => CBOpCode::RES_0_pHL,
        0x87 => CBOpCode::RES_0_A,
        0x88 => CBOpCode::RES_1_B,
        0x89 => CBOpCode::RES_1_C,
        0x8A => CBOpCode::RES_1_D,
        0x8B => CBOpCode::RES_1_E,
        0x8C => CBOpCode::RES_1_H,
        0x8D => CBOpCode::RES_1_L,
        0x8E => CBOpCode::RES_1_pHL,
        0x8F => CBOpCode::RES_1_A,

        0x90 => CBOpCode::RES_2_B,
        0x91 => CBOpCode::RES_2_C,
        0x92 => CBOpCode::RES_2_D,
        0x93 => CBOpCode::RES_2_E,
        0x94 => CBOpCode::RES_2_H,
        0x95 => CBOpCode::RES_2_L,
        0x96 => CBOpCode::RES_2_pHL,
        0x97 => CBOpCode::RES_2_A,
        0x98 => CBOpCode::RES_3_B,
        0x99 => CBOpCode::RES_3_C,
        0x9A => CBOpCode::RES_3_D,
        0x9B => CBOpCode::RES_3_E,
        0x9C => CBOpCode::RES_3_H,
        0x9D => CBOpCode::RES_3_L,
        0x9E => CBOpCode::RES_3_pHL,
        0x9F => CBOpCode::RES_3_A,

        0xA0 => CBOpCode::RES_4_B,
        0xA1 => CBOpCode::RES_4_C,
        0xA2 => CBOpCode::RES_4_D,
        0xA3 => CBOpCode::RES_4_E,
        0xA4 => CBOpCode::RES_4_H,
        0xA5 => CBOpCode::RES_4_L,
        0xA6 => CBOpCode::RES_4_pHL,
        0xA7 => CBOpCode::RES_4_A,
        0xA8 => CBOpCode::RES_5_B,
        0xA9 => CBOpCode::RES_5_C,
        0xAA => CBOpCode::RES_5_D,
        0xAB => CBOpCode::RES_5_E,
        0xAC => CBOpCode::RES_5_H,
        0xAD => CBOpCode::RES_5_L,
        0xAE => CBOpCode::RES_5_pHL,
        0xAF => CBOpCode::RES_5_A,

        0xB0 => CBOpCode::RES_6_B,
        0xB1 => CBOpCode::RES_6_C,
        0xB2 => CBOpCode::RES_6_D,
        0xB3 => CBOpCode::RES_6_E,
        0xB4 => CBOpCode::RES_6_H,
        0xB5 => CBOpCode::RES_6_L,
        0xB6 => CBOpCode::RES_6_pHL,
        0xB7 => CBOpCode::RES_6_A,
        0xB8 => CBOpCode::RES_7_B,
        0xB9 => CBOpCode::RES_7_C,
        0xBA => CBOpCode::RES_7_D,
        0xBB => CBOpCode::RES_7_E,
        0xBC => CBOpCode::RES_7_H,
        0xBD => CBOpCode::RES_7_L,
        0xBE => CBOpCode::RES_7_pHL,
        0xBF => CBOpCode::RES_7_A,

        0xC0 => CBOpCode::SET_0_B,
        0xC1 => CBOpCode::SET_0_C,
        0xC2 => CBOpCode::SET_0_D,
        0xC3 => CBOpCode::SET_0_E,
        0xC4 => CBOpCode::SET_0_H,
        0xC5 => CBOpCode::SET_0_L,
        0xC6 => CBOpCode::SET_0_pHL,
        0xC7 => CBOpCode::SET_0_A,
        0xC8 => CBOpCode::SET_1_B,
        0xC9 => CBOpCode::SET_1_C,
        0xCA => CBOpCode::SET_1_D,
        0xCB => CBOpCode::SET_1_E,
        0xCC => CBOpCode::SET_1_H,
        0xCD => CBOpCode::SET_1_L,
        0xCE => CBOpCode::SET_1_pHL,
        0xCF => CBOpCode::SET_1_A,

        0xD0 => CBOpCode::SET_2_B,
        0xD1 => CBOpCode::SET_2_C,
        0xD2 => CBOpCode::SET_2_D,
        0xD3 => CBOpCode::SET_2_E,
        0xD4 => CBOpCode::SET_2_H,
        0xD5 => CBOpCode::SET_2_L,
        0xD6 => CBOpCode::SET_2_pHL,
        0xD7 => CBOpCode::SET_2_A,
        0xD8 => CBOpCode::SET_3_B,
        0xD9 => CBOpCode::SET_3_C,
        0xDA => CBOpCode::SET_3_D,
        0xDB => CBOpCode::SET_3_E,
        0xDC => CBOpCode::SET_3_H,
        0xDD => CBOpCode::SET_3_L,
        0xDE => CBOpCode::SET_3_pHL,
        0xDF => CBOpCode::SET_3_A,

        0xE0 => CBOpCode::SET_4_B,
        0xE1 => CBOpCode::SET_4_C,
        0xE2 => CBOpCode::SET_4_D,
        0xE3 => CBOpCode::SET_4_E,
        0xE4 => CBOpCode::SET_4_H,
        0xE5 => CBOpCode::SET_4_L,
        0xE6 => CBOpCode::SET_4_pHL,
        0xE7 => CBOpCode::SET_4_A,
        0xE8 => CBOpCode::SET_5_B,
        0xE9 => CBOpCode::SET_5_C,
        0xEA => CBOpCode::SET_5_D,
        0xEB => CBOpCode::SET_5_E,
        0xEC => CBOpCode::SET_5_H,
        0xED => CBOpCode::SET_5_L,
        0xEE => CBOpCode::SET_5_pHL,
        0xEF => CBOpCode::SET_5_A,

        0xF0 => CBOpCode::SET_6_B,
        0xF1 => CBOpCode::SET_6_C,
        0xF2 => CBOpCode::SET_6_D,
        0xF3 => CBOpCode::SET_6_E,
        0xF4 => CBOpCode::SET_6_H,
        0xF5 => CBOpCode::SET_6_L,
        0xF6 => CBOpCode::SET_6_pHL,
        0xF7 => CBOpCode::SET_6_A,
        0xF8 => CBOpCode::SET_7_B,
        0xF9 => CBOpCode::SET_7_C,
        0xFA => CBOpCode::SET_7_D,
        0xFB => CBOpCode::SET_7_E,
        0xFC => CBOpCode::SET_7_H,
        0xFD => CBOpCode::SET_7_L,
        0xFE => CBOpCode::SET_7_pHL,
        0xFF => CBOpCode::SET_7_A,
    }
}
