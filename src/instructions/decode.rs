use super::arguments::*;
use super::opcodes::Instruction;

impl Instruction {
    pub fn decode_at(data: &Box<[u8]>, address: usize) -> Instruction {
        let op_code = data[address];

        match op_code {
            0x00 => Instruction::NOP,
            0x01 => Instruction::LD_BC_d16(d16::at(data, address + 1)),
            0x02 => Instruction::LD_pBC_A,
            0x03 => Instruction::INC_BC,
            0x04 => Instruction::INC_B,
            0x05 => Instruction::DEC_B,
            0x06 => Instruction::LD_B_d8(d8::at(data, address + 1)),
            0x07 => Instruction::RLCA,
            0x08 => Instruction::LD_pa16_SP(a16::at(data, address + 1)),
            0x09 => Instruction::ADD_HL_BC,
            0x0A => Instruction::LD_A_pBC,
            0x0B => Instruction::DEC_BC,
            0x0C => Instruction::INC_C,
            0x0D => Instruction::DEC_C,
            0x0E => Instruction::LD_C_d8(d8::at(data, address + 1)),
            0x0F => Instruction::RRCA,

            0x10 => Instruction::STOP_0,
            0x11 => Instruction::LD_DE_d16(d16::at(data, address + 1)),
            0x12 => Instruction::LD_pDE_A,
            0x13 => Instruction::INC_DE,
            0x14 => Instruction::INC_D,
            0x15 => Instruction::DEC_D,
            0x16 => Instruction::LD_D_d8(d8::at(data, address + 1)),
            0x17 => Instruction::RLA,
            0x18 => Instruction::JR_r8(r8::at(data, address + 1)),
            0x19 => Instruction::ADD_HL_DE,
            0x1A => Instruction::LD_A_pDE,
            0x1B => Instruction::DEC_DE,
            0x1C => Instruction::INC_E,
            0x1D => Instruction::DEC_E,
            0x1E => Instruction::LD_E_d8(d8::at(data, address + 1)),
            0x1F => Instruction::RRA,

            0x20 => Instruction::JR_NZ_r8(r8::at(data, address + 1)),
            0x21 => Instruction::LD_HL_d16(d16::at(data, address + 1)),
            0x22 => Instruction::LD_pHLp_A,
            0x23 => Instruction::INC_HL,
            0x24 => Instruction::INC_H,
            0x25 => Instruction::DEC_H,
            0x26 => Instruction::LD_H_d8(d8::at(data, address + 1)),
            0x27 => Instruction::DAA,
            0x28 => Instruction::JR_Z_r8(r8::at(data, address + 1)),
            0x29 => Instruction::ADD_HL_HL,
            0x2A => Instruction::LD_A_pHLp,
            0x2B => Instruction::DEC_HL,
            0x2C => Instruction::INC_L,
            0x2D => Instruction::DEC_L,
            0x2E => Instruction::LD_L_d8(d8::at(data, address + 1)),
            0x2F => Instruction::CPL,

            0x30 => Instruction::JR_NC_r8(r8::at(data, address + 1)),
            0x31 => Instruction::LD_SP_d16(d16::at(data, address + 1)),
            0x32 => Instruction::LD_pHLm_A,
            0x33 => Instruction::INC_SP,
            0x34 => Instruction::INC_pHL,
            0x35 => Instruction::DEC_pHL,
            0x36 => Instruction::LD_pHL_d8(d8::at(data, address + 1)),
            0x37 => Instruction::SCF,
            0x38 => Instruction::JR_C_r8(r8::at(data, address + 1)),
            0x39 => Instruction::ADD_HL_SP,
            0x3A => Instruction::LD_A_pHLm,
            0x3B => Instruction::DEC_SP,
            0x3C => Instruction::INC_A,
            0x3D => Instruction::DEC_A,
            0x3E => Instruction::LD_A_d8(d8::at(data, address + 1)),
            0x3F => Instruction::CCF,

            0x40 => Instruction::LD_B_B,
            0x41 => Instruction::LD_B_C,
            0x42 => Instruction::LD_B_D,
            0x43 => Instruction::LD_B_E,
            0x44 => Instruction::LD_B_H,
            0x45 => Instruction::LD_B_L,
            0x46 => Instruction::LD_B_pHL,
            0x47 => Instruction::LD_B_A,
            0x48 => Instruction::LD_C_B,
            0x49 => Instruction::LD_C_C,
            0x4A => Instruction::LD_C_D,
            0x4B => Instruction::LD_C_E,
            0x4C => Instruction::LD_C_H,
            0x4D => Instruction::LD_C_L,
            0x4E => Instruction::LD_C_pHL,
            0x4F => Instruction::LD_C_A,

            0x50 => Instruction::LD_D_B,
            0x51 => Instruction::LD_D_C,
            0x52 => Instruction::LD_D_D,
            0x53 => Instruction::LD_D_E,
            0x54 => Instruction::LD_D_H,
            0x55 => Instruction::LD_D_L,
            0x56 => Instruction::LD_D_pHL,
            0x57 => Instruction::LD_D_A,
            0x58 => Instruction::LD_E_B,
            0x59 => Instruction::LD_E_C,
            0x5A => Instruction::LD_E_D,
            0x5B => Instruction::LD_E_E,
            0x5C => Instruction::LD_E_H,
            0x5D => Instruction::LD_E_L,
            0x5E => Instruction::LD_E_pHL,
            0x5F => Instruction::LD_E_A,

            0x60 => Instruction::LD_H_B,
            0x61 => Instruction::LD_H_C,
            0x62 => Instruction::LD_H_D,
            0x63 => Instruction::LD_H_E,
            0x64 => Instruction::LD_H_H,
            0x65 => Instruction::LD_H_L,
            0x66 => Instruction::LD_H_pHL,
            0x67 => Instruction::LD_H_A,
            0x68 => Instruction::LD_L_B,
            0x69 => Instruction::LD_L_C,
            0x6A => Instruction::LD_L_D,
            0x6B => Instruction::LD_L_E,
            0x6C => Instruction::LD_L_H,
            0x6D => Instruction::LD_L_L,
            0x6E => Instruction::LD_L_pHL,
            0x6F => Instruction::LD_L_A,

            0x70 => Instruction::LD_pHL_B,
            0x71 => Instruction::LD_pHL_C,
            0x72 => Instruction::LD_pHL_D,
            0x73 => Instruction::LD_pHL_E,
            0x74 => Instruction::LD_pHL_H,
            0x75 => Instruction::LD_pHL_L,
            0x76 => Instruction::HALT,
            0x77 => Instruction::LD_pHL_A,
            0x78 => Instruction::LD_A_B,
            0x79 => Instruction::LD_A_C,
            0x7A => Instruction::LD_A_D,
            0x7B => Instruction::LD_A_E,
            0x7C => Instruction::LD_A_H,
            0x7D => Instruction::LD_A_L,
            0x7E => Instruction::LD_A_pHL,
            0x7F => Instruction::LD_A_A,

            0x80 => Instruction::ADD_A_B,
            0x81 => Instruction::ADD_A_C,
            0x82 => Instruction::ADD_A_D,
            0x83 => Instruction::ADD_A_E,
            0x84 => Instruction::ADD_A_H,
            0x85 => Instruction::ADD_A_L,
            0x86 => Instruction::ADD_A_pHL,
            0x87 => Instruction::ADD_A_A,
            0x88 => Instruction::ADC_A_B,
            0x89 => Instruction::ADC_A_C,
            0x8A => Instruction::ADC_A_D,
            0x8B => Instruction::ADC_A_E,
            0x8C => Instruction::ADC_A_H,
            0x8D => Instruction::ADC_A_L,
            0x8E => Instruction::ADC_A_pHL,
            0x8F => Instruction::ADC_A_A,

            0x90 => Instruction::SUB_B,
            0x91 => Instruction::SUB_C,
            0x92 => Instruction::SUB_D,
            0x93 => Instruction::SUB_E,
            0x94 => Instruction::SUB_H,
            0x95 => Instruction::SUB_L,
            0x96 => Instruction::SUB_pHL,
            0x97 => Instruction::SUB_A,
            0x98 => Instruction::SBC_A_B,
            0x99 => Instruction::SBC_A_C,
            0x9A => Instruction::SBC_A_D,
            0x9B => Instruction::SBC_A_E,
            0x9C => Instruction::SBC_A_H,
            0x9D => Instruction::SBC_A_L,
            0x9E => Instruction::SBC_A_pHL,
            0x9F => Instruction::SBC_A_A,

            0xA0 => Instruction::AND_B,
            0xA1 => Instruction::AND_C,
            0xA2 => Instruction::AND_D,
            0xA3 => Instruction::AND_E,
            0xA4 => Instruction::AND_H,
            0xA5 => Instruction::AND_L,
            0xA6 => Instruction::AND_pHL,
            0xA7 => Instruction::AND_A,
            0xA8 => Instruction::XOR_B,
            0xA9 => Instruction::XOR_C,
            0xAA => Instruction::XOR_D,
            0xAB => Instruction::XOR_E,
            0xAC => Instruction::XOR_H,
            0xAD => Instruction::XOR_L,
            0xAE => Instruction::XOR_pHL,
            0xAF => Instruction::XOR_A,

            0xB0 => Instruction::OR_B,
            0xB1 => Instruction::OR_C,
            0xB2 => Instruction::OR_D,
            0xB3 => Instruction::OR_E,
            0xB4 => Instruction::OR_H,
            0xB5 => Instruction::OR_L,
            0xB6 => Instruction::OR_pHL,
            0xB7 => Instruction::OR_A,
            0xB8 => Instruction::CP_B,
            0xB9 => Instruction::CP_C,
            0xBA => Instruction::CP_D,
            0xBB => Instruction::CP_E,
            0xBC => Instruction::CP_H,
            0xBD => Instruction::CP_L,
            0xBE => Instruction::CP_pHL,
            0xBF => Instruction::CP_A,

            0xC0 => Instruction::RET_NZ,
            0xC1 => Instruction::POP_BC,
            0xC2 => Instruction::JP_NZ_a16(a16::at(data, address + 1)),
            0xC3 => Instruction::JP_a16(a16::at(data, address + 1)),
            0xC4 => Instruction::CALL_NZ_a16(a16::at(data, address + 1)),
            0xC5 => Instruction::PUSH_BC,
            0xC6 => Instruction::ADD_A_d8(d8::at(data, address + 1)),
            0xC7 => Instruction::RST_00H,
            0xC8 => Instruction::RET_Z,
            0xC9 => Instruction::RET,
            0xCA => Instruction::JP_Z_a16(a16::at(data, address + 1)),
            0xCB => Instruction::PREFIX_CB,
            0xCC => Instruction::CALL_Z_a16(a16::at(data, address + 1)),
            0xCD => Instruction::CALL_a16(a16::at(data, address + 1)),
            0xCE => Instruction::ADC_A_d8(d8::at(data, address + 1)),
            0xCF => Instruction::RST_08H,

            0xD0 => Instruction::RET_NC,
            0xD1 => Instruction::POP_DE,
            0xD2 => Instruction::JP_NC_a16(a16::at(data, address + 1)),
            0xD3 => Instruction::Unknown,
            0xD4 => Instruction::CALL_NC_a16(a16::at(data, address + 1)),
            0xD5 => Instruction::PUSH_DE,
            0xD6 => Instruction::SUB_d8(d8::at(data, address + 1)),
            0xD7 => Instruction::RST_10H,
            0xD8 => Instruction::RET_C,
            0xD9 => Instruction::RETI,
            0xDA => Instruction::JP_C_a16(a16::at(data, address + 1)),
            0xDB => Instruction::Unknown,
            0xDC => Instruction::CALL_C_a16(a16::at(data, address + 1)),
            0xDD => Instruction::Unknown,
            0xDE => Instruction::SBC_A_d8(d8::at(data, address + 1)),
            0xDF => Instruction::RST_18H,

            0xE0 => Instruction::LDH_pa8_A(a8::at(data, address + 1)),
            0xE1 => Instruction::POP_HL,
            0xE2 => Instruction::LD_pC_A,
            0xE3 => Instruction::Unknown,
            0xE4 => Instruction::Unknown,
            0xE5 => Instruction::PUSH_HL,
            0xE6 => Instruction::AND_d8(d8::at(data, address + 1)),
            0xE7 => Instruction::RST_20H,
            0xE8 => Instruction::ADD_SP_r8(r8::at(data, address + 1)),
            0xE9 => Instruction::JP_pHL,
            0xEA => Instruction::LD_pa16_A(a16::at(data, address + 1)),
            0xEB => Instruction::Unknown,
            0xEC => Instruction::Unknown,
            0xED => Instruction::Unknown,
            0xEE => Instruction::XOR_d8(d8::at(data, address + 1)),
            0xEF => Instruction::RST_28H,

            0xF0 => Instruction::LDH_A_pa8(a8::at(data, address + 1)),
            0xF1 => Instruction::POP_AF,
            0xF2 => Instruction::LD_A_pC,
            0xF3 => Instruction::DI,
            0xF4 => Instruction::Unknown,
            0xF5 => Instruction::PUSH_AF,
            0xF6 => Instruction::OR_d8(d8::at(data, address + 1)),
            0xF7 => Instruction::RST_30H,
            0xF8 => Instruction::LD_HL_SPp_r8(r8::at(data, address + 1)),
            0xF9 => Instruction::LD_SP_HL,
            0xFA => Instruction::LD_A_pa16(a16::at(data, address + 1)),
            0xFB => Instruction::EI,
            0xFC => Instruction::Unknown,
            0xFD => Instruction::Unknown,
            0xFE => Instruction::CP_d8(d8::at(data, address + 1)),
            0xFF => Instruction::RST_38H,

            _ => Instruction::Unknown
        }
    }
}
