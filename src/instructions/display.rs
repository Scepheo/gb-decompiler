use std::fmt;
use super::opcodes::Instruction;

impl fmt::Display for Instruction {
    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {
        match *self {
            Instruction::NOP => write!(f, "NOP"),
            Instruction::LD_BC_d16(value) => write!(f, "LD BC,{}", value),
            Instruction::LD_pBC_A => write!(f, "LD (BC),A"),
            Instruction::INC_BC => write!(f, "INC BC"),
            Instruction::INC_B => write!(f, "INC B"),
            Instruction::DEC_B => write!(f, "DEC B"),
            Instruction::LD_B_d8(value) => write!(f, "LD B,{}", value),
            Instruction::RLCA => write!(f, "RLCA"),
            Instruction::LD_pa16_SP(value) => write!(f, "LD ({}),SP", value),
            Instruction::ADD_HL_BC => write!(f, "ADD HL,BC"),
            Instruction::LD_A_pBC => write!(f, "LD A,(BC)"),
            Instruction::DEC_BC => write!(f, "DEC BC"),
            Instruction::INC_C => write!(f, "INC C"),
            Instruction::DEC_C => write!(f, "DEC C"),
            Instruction::LD_C_d8(value) => write!(f, "LD C,{}", value),
            Instruction::RRCA => write!(f, "RRCA"),
            Instruction::STOP_0 => write!(f, "STOP 0"),
            Instruction::LD_DE_d16(value) => write!(f, "LD DE,{}", value),
            Instruction::LD_pDE_A => write!(f, "LD (DE),A"),
            Instruction::INC_DE => write!(f, "INC DE"),
            Instruction::INC_D => write!(f, "INC D"),
            Instruction::DEC_D => write!(f, "DEC D"),
            Instruction::LD_D_d8(value) => write!(f, "LD D,{}", value),
            Instruction::RLA => write!(f, "RLA"),
            Instruction::JR_r8(value) => write!(f, "JR {}", value),
            Instruction::ADD_HL_DE => write!(f, "ADD HL,DE"),
            Instruction::LD_A_pDE => write!(f, "LD A,(DE)"),
            Instruction::DEC_DE => write!(f, "DEC DE"),
            Instruction::INC_E => write!(f, "INC E"),
            Instruction::DEC_E => write!(f, "DEC E"),
            Instruction::LD_E_d8(value) => write!(f, "LD E,{}", value),
            Instruction::RRA => write!(f, "RRA"),
            Instruction::JR_NZ_r8(value) => write!(f, "JR NZ,{}", value),
            Instruction::LD_HL_d16(value) => write!(f, "LD HL,{}", value),
            Instruction::LD_pHLp_A => write!(f, "LD (HL+),A"),
            Instruction::INC_HL => write!(f, "INC HL"),
            Instruction::INC_H => write!(f, "INC H"),
            Instruction::DEC_H => write!(f, "DEC H"),
            Instruction::LD_H_d8(value) => write!(f, "LD H,{}", value),
            Instruction::DAA => write!(f, "DAA"),
            Instruction::JR_Z_r8(value) => write!(f, "JR Z,{}", value),
            Instruction::ADD_HL_HL => write!(f, "ADD HL,HL"),
            Instruction::LD_A_pHLp => write!(f, "LD A,(HL+)"),
            Instruction::DEC_HL => write!(f, "DEC HL"),
            Instruction::INC_L => write!(f, "INC L"),
            Instruction::DEC_L => write!(f, "DEC L"),
            Instruction::LD_L_d8(value) => write!(f, "LD L,{}", value),
            Instruction::CPL => write!(f, "CPL"),
            Instruction::JR_NC_r8(value) => write!(f, "JR NC,{}", value),
            Instruction::LD_SP_d16(value) => write!(f, "LD SP,{}", value),
            Instruction::LD_pHLm_A => write!(f, "LD (HL-),A"),
            Instruction::INC_SP => write!(f, "INC SP"),
            Instruction::INC_pHL => write!(f, "INC (HL)"),
            Instruction::DEC_pHL => write!(f, "DEC (HL)"),
            Instruction::LD_pHL_d8(value) => write!(f, "LD (HL),{}", value),
            Instruction::SCF => write!(f, "SCF"),
            Instruction::JR_C_r8(value) => write!(f, "JR C,{}", value),
            Instruction::ADD_HL_SP => write!(f, "ADD HL,SP"),
            Instruction::LD_A_pHLm => write!(f, "LD A,(HL-)"),
            Instruction::DEC_SP => write!(f, "DEC SP"),
            Instruction::INC_A => write!(f, "INC A"),
            Instruction::DEC_A => write!(f, "DEC A"),
            Instruction::LD_A_d8(value) => write!(f, "LD A,{}", value),
            Instruction::CCF => write!(f, "CCF"),
            Instruction::LD_B_B => write!(f, "LD B,B"),
            Instruction::LD_B_C => write!(f, "LD B,C"),
            Instruction::LD_B_D => write!(f, "LD B,D"),
            Instruction::LD_B_E => write!(f, "LD B,E"),
            Instruction::LD_B_H => write!(f, "LD B,H"),
            Instruction::LD_B_L => write!(f, "LD B,L"),
            Instruction::LD_B_pHL => write!(f, "LD B,(HL)"),
            Instruction::LD_B_A => write!(f, "LD B,A"),
            Instruction::LD_C_B => write!(f, "LD C,B"),
            Instruction::LD_C_C => write!(f, "LD C,C"),
            Instruction::LD_C_D => write!(f, "LD C,D"),
            Instruction::LD_C_E => write!(f, "LD C,E"),
            Instruction::LD_C_H => write!(f, "LD C,H"),
            Instruction::LD_C_L => write!(f, "LD C,L"),
            Instruction::LD_C_pHL => write!(f, "LD C,(HL)"),
            Instruction::LD_C_A => write!(f, "LD C,A"),
            Instruction::LD_D_B => write!(f, "LD D,B"),
            Instruction::LD_D_C => write!(f, "LD D,C"),
            Instruction::LD_D_D => write!(f, "LD D,D"),
            Instruction::LD_D_E => write!(f, "LD D,E"),
            Instruction::LD_D_H => write!(f, "LD D,H"),
            Instruction::LD_D_L => write!(f, "LD D,L"),
            Instruction::LD_D_pHL => write!(f, "LD D,(HL)"),
            Instruction::LD_D_A => write!(f, "LD D,A"),
            Instruction::LD_E_B => write!(f, "LD E,B"),
            Instruction::LD_E_C => write!(f, "LD E,C"),
            Instruction::LD_E_D => write!(f, "LD E,D"),
            Instruction::LD_E_E => write!(f, "LD E,E"),
            Instruction::LD_E_H => write!(f, "LD E,H"),
            Instruction::LD_E_L => write!(f, "LD E,L"),
            Instruction::LD_E_pHL => write!(f, "LD E,(HL)"),
            Instruction::LD_E_A => write!(f, "LD E,A"),
            Instruction::LD_H_B => write!(f, "LD H,B"),
            Instruction::LD_H_C => write!(f, "LD H,C"),
            Instruction::LD_H_D => write!(f, "LD H,D"),
            Instruction::LD_H_E => write!(f, "LD H,E"),
            Instruction::LD_H_H => write!(f, "LD H,H"),
            Instruction::LD_H_L => write!(f, "LD H,L"),
            Instruction::LD_H_pHL => write!(f, "LD H,(HL)"),
            Instruction::LD_H_A => write!(f, "LD H,A"),
            Instruction::LD_L_B => write!(f, "LD L,B"),
            Instruction::LD_L_C => write!(f, "LD L,C"),
            Instruction::LD_L_D => write!(f, "LD L,D"),
            Instruction::LD_L_E => write!(f, "LD L,E"),
            Instruction::LD_L_H => write!(f, "LD L,H"),
            Instruction::LD_L_L => write!(f, "LD L,L"),
            Instruction::LD_L_pHL => write!(f, "LD L,(HL)"),
            Instruction::LD_L_A => write!(f, "LD L,A"),
            Instruction::LD_pHL_B => write!(f, "LD (HL),B"),
            Instruction::LD_pHL_C => write!(f, "LD (HL),C"),
            Instruction::LD_pHL_D => write!(f, "LD (HL),D"),
            Instruction::LD_pHL_E => write!(f, "LD (HL),E"),
            Instruction::LD_pHL_H => write!(f, "LD (HL),H"),
            Instruction::LD_pHL_L => write!(f, "LD (HL),L"),
            Instruction::HALT => write!(f, "HALT"),
            Instruction::LD_pHL_A => write!(f, "LD (HL),A"),
            Instruction::LD_A_B => write!(f, "LD A,B"),
            Instruction::LD_A_C => write!(f, "LD A,C"),
            Instruction::LD_A_D => write!(f, "LD A,D"),
            Instruction::LD_A_E => write!(f, "LD A,E"),
            Instruction::LD_A_H => write!(f, "LD A,H"),
            Instruction::LD_A_L => write!(f, "LD A,L"),
            Instruction::LD_A_pHL => write!(f, "LD A,(HL)"),
            Instruction::LD_A_A => write!(f, "LD A,A"),
            Instruction::ADD_A_B => write!(f, "ADD A,B"),
            Instruction::ADD_A_C => write!(f, "ADD A,C"),
            Instruction::ADD_A_D => write!(f, "ADD A,D"),
            Instruction::ADD_A_E => write!(f, "ADD A,E"),
            Instruction::ADD_A_H => write!(f, "ADD A,H"),
            Instruction::ADD_A_L => write!(f, "ADD A,L"),
            Instruction::ADD_A_pHL => write!(f, "ADD A,(HL)"),
            Instruction::ADD_A_A => write!(f, "ADD A,A"),
            Instruction::ADC_A_B => write!(f, "ADC A,B"),
            Instruction::ADC_A_C => write!(f, "ADC A,C"),
            Instruction::ADC_A_D => write!(f, "ADC A,D"),
            Instruction::ADC_A_E => write!(f, "ADC A,E"),
            Instruction::ADC_A_H => write!(f, "ADC A,H"),
            Instruction::ADC_A_L => write!(f, "ADC A,L"),
            Instruction::ADC_A_pHL => write!(f, "ADC A,(HL)"),
            Instruction::ADC_A_A => write!(f, "ADC A,A"),
            Instruction::SUB_B => write!(f, "SUB B"),
            Instruction::SUB_C => write!(f, "SUB C"),
            Instruction::SUB_D => write!(f, "SUB D"),
            Instruction::SUB_E => write!(f, "SUB E"),
            Instruction::SUB_H => write!(f, "SUB H"),
            Instruction::SUB_L => write!(f, "SUB L"),
            Instruction::SUB_pHL => write!(f, "SUB (HL)"),
            Instruction::SUB_A => write!(f, "SUB A"),
            Instruction::SBC_A_B => write!(f, "SBC A,B"),
            Instruction::SBC_A_C => write!(f, "SBC A,C"),
            Instruction::SBC_A_D => write!(f, "SBC A,D"),
            Instruction::SBC_A_E => write!(f, "SBC A,E"),
            Instruction::SBC_A_H => write!(f, "SBC A,H"),
            Instruction::SBC_A_L => write!(f, "SBC A,L"),
            Instruction::SBC_A_pHL => write!(f, "SBC A,(HL)"),
            Instruction::SBC_A_A => write!(f, "SBC A,A"),
            Instruction::AND_B => write!(f, "AND B"),
            Instruction::AND_C => write!(f, "AND C"),
            Instruction::AND_D => write!(f, "AND D"),
            Instruction::AND_E => write!(f, "AND E"),
            Instruction::AND_H => write!(f, "AND H"),
            Instruction::AND_L => write!(f, "AND L"),
            Instruction::AND_pHL => write!(f, "AND (HL)"),
            Instruction::AND_A => write!(f, "AND A"),
            Instruction::XOR_B => write!(f, "XOR B"),
            Instruction::XOR_C => write!(f, "XOR C"),
            Instruction::XOR_D => write!(f, "XOR D"),
            Instruction::XOR_E => write!(f, "XOR E"),
            Instruction::XOR_H => write!(f, "XOR H"),
            Instruction::XOR_L => write!(f, "XOR L"),
            Instruction::XOR_pHL => write!(f, "XOR (HL)"),
            Instruction::XOR_A => write!(f, "XOR A"),
            Instruction::OR_B => write!(f, "OR B"),
            Instruction::OR_C => write!(f, "OR C"),
            Instruction::OR_D => write!(f, "OR D"),
            Instruction::OR_E => write!(f, "OR E"),
            Instruction::OR_H => write!(f, "OR H"),
            Instruction::OR_L => write!(f, "OR L"),
            Instruction::OR_pHL => write!(f, "OR (HL)"),
            Instruction::OR_A => write!(f, "OR A"),
            Instruction::CP_B => write!(f, "CP B"),
            Instruction::CP_C => write!(f, "CP C"),
            Instruction::CP_D => write!(f, "CP D"),
            Instruction::CP_E => write!(f, "CP E"),
            Instruction::CP_H => write!(f, "CP H"),
            Instruction::CP_L => write!(f, "CP L"),
            Instruction::CP_pHL => write!(f, "CP (HL)"),
            Instruction::CP_A => write!(f, "CP A"),
            Instruction::RET_NZ => write!(f, "RET NZ"),
            Instruction::POP_BC => write!(f, "POP BC"),
            Instruction::JP_NZ_a16(value) => write!(f, "JP NZ,{}", value),
            Instruction::JP_a16(value) => write!(f, "JP {}", value),
            Instruction::CALL_NZ_a16(value) => write!(f, "CALL NZ,{}", value),
            Instruction::PUSH_BC => write!(f, "PUSH BC"),
            Instruction::ADD_A_d8(value) => write!(f, "ADD A,{}", value),
            Instruction::RST_00H => write!(f, "RST 00H"),
            Instruction::RET_Z => write!(f, "RET Z"),
            Instruction::RET => write!(f, "RET"),
            Instruction::JP_Z_a16(value) => write!(f, "JP Z,{}", value),
            Instruction::PREFIX_CB => write!(f, "PREFIX CB"),
            Instruction::CALL_Z_a16(value) => write!(f, "CALL Z,{}", value),
            Instruction::CALL_a16(value) => write!(f, "CALL {}", value),
            Instruction::ADC_A_d8(value) => write!(f, "ADC A,{}", value),
            Instruction::RST_08H => write!(f, "RST 08H"),
            Instruction::RET_NC => write!(f, "RET NC"),
            Instruction::POP_DE => write!(f, "POP DE"),
            Instruction::JP_NC_a16(value) => write!(f, "JP NC,{}", value),
            Instruction::CALL_NC_a16(value) => write!(f, "CALL NC,{}", value),
            Instruction::PUSH_DE => write!(f, "PUSH DE"),
            Instruction::SUB_d8(value) => write!(f, "SUB {}", value),
            Instruction::RST_10H => write!(f, "RST 10H"),
            Instruction::RET_C => write!(f, "RET C"),
            Instruction::RETI => write!(f, "RETI"),
            Instruction::JP_C_a16(value) => write!(f, "JP C,{}", value),
            Instruction::CALL_C_a16(value) => write!(f, "CALL C,{}", value),
            Instruction::SBC_A_d8(value) => write!(f, "SBC A,{}", value),
            Instruction::RST_18H => write!(f, "RST 18H"),
            Instruction::LDH_pa8_A(value) => write!(f, "LDH ({}),A", value),
            Instruction::POP_HL => write!(f, "POP HL"),
            Instruction::LD_pC_A => write!(f, "LD (C),A"),
            Instruction::PUSH_HL => write!(f, "PUSH HL"),
            Instruction::AND_d8(value) => write!(f, "AND {}", value),
            Instruction::RST_20H => write!(f, "RST 20H"),
            Instruction::ADD_SP_r8(value) => write!(f, "ADD SP,{}", value),
            Instruction::JP_pHL => write!(f, "JP (HL)"),
            Instruction::LD_pa16_A(value) => write!(f, "LD ({}),A", value),
            Instruction::XOR_d8(value) => write!(f, "XOR {}", value),
            Instruction::RST_28H => write!(f, "RST 28H"),
            Instruction::LDH_A_pa8(value) => write!(f, "LDH A,({})", value),
            Instruction::POP_AF => write!(f, "POP AF"),
            Instruction::LD_A_pC => write!(f, "LD A,(C)"),
            Instruction::DI => write!(f, "DI"),
            Instruction::PUSH_AF => write!(f, "PUSH AF"),
            Instruction::OR_d8(value) => write!(f, "OR {}", value),
            Instruction::RST_30H => write!(f, "RST 30H"),
            Instruction::LD_HL_SPp_r8(value) => write!(f, "LD HL,SP+{}", value),
            Instruction::LD_SP_HL => write!(f, "LD SP,HL"),
            Instruction::LD_A_pa16(value) => write!(f, "LD A,({})", value),
            Instruction::EI => write!(f, "EI"),
            Instruction::CP_d8(value) => write!(f, "CP {}", value),
            Instruction::RST_38H => write!(f, "RST 38H"),
            _ => write!(f, "UNKNOWN")
        }
    }
}
